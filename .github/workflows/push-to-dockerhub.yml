name: Push to Dockerhub

on:
  push:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    name: Check changed files
    outputs:
      backend: ${{ steps.check_files.outputs.backend }}
      frontend: ${{ steps.check_files.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: check modified files
        id: check_files
        run: |
            git diff --name-only HEAD^ HEAD > files.txt
            while IFS= read -r file; do
              echo $file
              if [[ $file == frontend/* ]]; then
                echo "frontend service will be rebuilt"
                echo "::set-output name=frontend::true"
              elif [[ $file == backend/* ]]; then
                echo "backend service will be rebuilt"
                echo "::set-output name=backend::true"
              else
                echo "file does not belong to any service"
              fi
            done < files.txt

  push-to-registry:
    needs: [init]
    name: Build and publish images to Docker Registry
    runs-on: ubuntu-latest
    env:
      frontend: ${{secrets.DOCKERHUB_USERNAME}}/lct-2024.frontend
      backend: ${{secrets.DOCKERHUB_USERNAME}}/lct-2024.backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Add SHORT_SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      -
        name: Push frontend image
        uses: docker/build-push-action@v4
        if: needs.init.outputs.frontend == 'true'
        with:
          context: frontend
          push: true
          tags: |
            ${{env.frontend}}:${{ env.SHORT_SHA }}
            ${{env.frontend}}:latest
          cache-from: type=registry,ref=${{env.frontend}}:latest
          cache-to: type=inline
          platforms: linux/x86_64
          build-args: |
            VITE_SHA=${{env.SHORT_SHA}}
      -
        name: Push backend image
        uses: docker/build-push-action@v4
        if: needs.init.outputs.backend == 'true'
        with:
          context: backend
          push: true
          tags: |
             ${{env.backend}}:${{ env.SHORT_SHA }}
             ${{env.backend}}:latest
          cache-from: type=registry,ref=${{env.backend}}:latest
          cache-to: type=inline
          platforms: linux/x86_64

  update-k8s:
    needs: [push-to-registry]
    name: apply k8s configs
    runs-on: ubuntu-latest
    steps:
    - name: connect by SSH and execute commands
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          git clone https://github.com/danilkladnitsky/lct-2024.git
          cd lct-2024
          kubectl apply -f k8s/frontend/service.yml
          kubectl apply -f k8s/frontend/deployment.yml
          kubectl apply -f k8s/frontend/ingress.yml

          kubectl apply -f k8s/backend/service.yml
          kubectl apply -f k8s/backend/deployment.yml
          kubectl apply -f k8s/backend/ingress.yml

          kubectl rollout restart -n default deployment backend-deployment
          kubectl rollout restart -n default deployment frontend-deployment

          cd ..
          rm -rf lct-2024